# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2019-03-12 08:55
from __future__ import unicode_literals

import core.mixins
from django.conf import settings
import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(db_index=True, default='', max_length=255)),
                ('client_city', models.CharField(default='', max_length=255)),
                ('client_address', models.CharField(db_index=True, default='', max_length=255)),
                ('client_mol', models.CharField(default='', max_length=255)),
                ('client_eik', models.CharField(db_index=True, max_length=255)),
                ('client_dds', models.CharField(blank=True, max_length=255, null=True)),
                ('created_by', models.CharField(max_length=255, null=True)),
                ('accepted_by', models.CharField(max_length=255, null=True)),
                ('invoice_type', models.CharField(choices=[('invoice', 'Фактура'), ('proforma', 'Проформа'), ('credit', 'Кредит'), ('debit', 'Дебит')], db_index=True, default='invoice', max_length=10)),
                ('number', models.PositiveIntegerField(db_index=True)),
                ('ref_number', models.PositiveIntegerField(blank=True, null=True)),
                ('released_at', models.DateField(blank=True, null=True)),
                ('taxevent_at', models.DateField(blank=True, null=True)),
                ('dds_percent', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('note', models.TextField(blank=True, default='')),
                ('no_dds_reason', models.CharField(default='', max_length=255)),
                ('currency', models.CharField(max_length=3, null=True)),
                ('currency_rate', models.DecimalField(decimal_places=6, max_digits=10, null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
                ('deleted', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-released_at', '-invoice_type', '-number'),
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_no', models.SmallIntegerField(blank=True)),
                ('name', models.CharField(default='', max_length=255)),
                ('unit_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('quantity', models.FloatField(blank=True, default=1)),
                ('measure', models.CharField(blank=True, max_length=55)),
                ('discount', models.FloatField(blank=True, null=True)),
                ('dds_percent', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='invoices.Invoice')),
            ],
            options={
                'ordering': ('pk',),
            },
            bases=(core.mixins.FillEmptyTranslationsMixin, models.Model),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='invoices_in_search__046699_gin'),
        ),
        migrations.AlterUniqueTogether(
            name='invoice',
            unique_together=set([('user', 'invoice_type', 'number')]),
        ),
    ]
